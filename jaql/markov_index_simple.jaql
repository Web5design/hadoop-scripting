registerFunction("splitString", "com.acme.extensions.expr.SplitIterExpr");

$markovEntry = fn($words, $indexSize, $pos) (
	$index = range(0, $indexSize - 1)
		-> transform each $i $words[$pos - $indexSize + $i],
	[ $index, $words[$pos] ]
);

$markovLine = fn($line, $indexSize) (
	$words   = splitString($line, " "),
	$length  = ($words -> aggregate count($))[0],
	$indices = range($indexSize, $length - 1),
	$indices -> transform each $i $markovEntry($words, $indexSize, $i)
);

$markov = fn($lines, $indexSize) (
  $lines
    -> expand each $line $markovLine($line, $indexSize)
    -> group by $w = ($[0]) into [$w, $[*][1]]
);

$fromFile = fn($input) (
	hdfsShell("-copyFromLocal " + $input + " markov_input") * 0,
	read({
		type: "hdfs",
		location: "markov_input",
		inoptions: {
			format: "org.apache.hadoop.mapred.TextInputFormat",
			converter: "com.acme.extensions.data.FromLineConverter"
		}
	})
);

$fromString = fn($input) ( splitString($input, "\n") );

// $markov($fromFile("wikipedia"), 3) -> write(file('markov.json'));
$markov($fromString("How much wood would a wood chuck chuck if a wood chuck could chuck wood?"), 1); // -> write(file('markov.json'));